import styled from "styled-components";
import { cloneElement, FunctionComponent, useState } from "react";
import { BarsRegular, ChevronRightRegular } from "../../Icons";
import HamburgerAnimated from "../../Icons/HamburgerAnimated";
import useMainMenuElements from "../useMainMenuElements";
import { useTranslation } from "react-i18next";
import MainNavigationBigButton from "../../Buttons/MainNavigationBigButton";

type Props = {};
const Wrapper = styled.section`
  display: flex;
  /* transform: scale(50%); */
  flex-direction: column;
  /* position: relative; */

  /* ----------------------------------------------
 * Generated by Animista on 2021-10-28 17:50:22
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

  /**
 * ----------------------------------------
 * animation swing-in-top-fwd
 * ----------------------------------------
 */
  @-webkit-keyframes swing-in-top-fwd {
    0% {
      -webkit-transform: rotateX(-100deg);
      transform: rotateX(-100deg);
      -webkit-transform-origin: top;
      transform-origin: top;
      opacity: 0;
    }
    100% {
      -webkit-transform: rotateX(0deg);
      transform: rotateX(0deg);
      -webkit-transform-origin: top;
      transform-origin: top;
      opacity: 1;
    }
  }
  @keyframes swing-in-top-fwd {
    0% {
      -webkit-transform: rotateX(-100deg);
      transform: rotateX(-100deg);
      -webkit-transform-origin: top;
      transform-origin: top;
      opacity: 0;
    }
    100% {
      -webkit-transform: rotateX(0deg);
      transform: rotateX(0deg);
      -webkit-transform-origin: top;
      transform-origin: top;
      opacity: 1;
    }
  }

  /* ----------------------------------------------
 * Generated by Animista on 2021-10-28 17:54:11
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

  /**
 * ----------------------------------------
 * animation swing-out-top-bck
 * ----------------------------------------
 */
  @-webkit-keyframes swing-out-top-bck {
    0% {
      -webkit-transform: rotateX(0deg);
      transform: rotateX(0deg);
      -webkit-transform-origin: top;
      transform-origin: top;
      opacity: 1;
    }
    100% {
      -webkit-transform: rotateX(-100deg);
      transform: rotateX(-100deg);
      -webkit-transform-origin: top;
      transform-origin: top;
      opacity: 0;
    }
  }
  @keyframes swing-out-top-bck {
    0% {
      -webkit-transform: rotateX(0deg);
      transform: rotateX(0deg);
      -webkit-transform-origin: top;
      transform-origin: top;
      opacity: 1;
    }
    100% {
      -webkit-transform: rotateX(-100deg);
      transform: rotateX(-100deg);
      -webkit-transform-origin: top;
      transform-origin: top;
      opacity: 0;
    }
  }

  .hide {
    display: none;
  }

  .swing-in-top-fwd {
    -webkit-animation: swing-in-top-fwd 0.5s
      cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
    animation: swing-in-top-fwd 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275)
      both;
  }

  .swing-out-top-bck {
    -webkit-animation: swing-out-top-bck 0.45s
      cubic-bezier(0.6, -0.28, 0.735, 0.045) both;
    animation: swing-out-top-bck 0.45s cubic-bezier(0.6, -0.28, 0.735, 0.045)
      both;
  }

  /* ----------------------------------------------
 * Generated by Animista on 2021-10-28 20:13:8
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

  /**
 * ----------------------------------------
 * animation slide-in-right
 * ----------------------------------------
 */
  @-webkit-keyframes slide-in-right {
    0% {
      -webkit-transform: translateX(1000px);
      transform: translateX(1000px);
      opacity: 0;
    }
    100% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
      opacity: 1;
    }
  }
  @keyframes slide-in-right {
    0% {
      -webkit-transform: translateX(1000px);
      transform: translateX(1000px);
      opacity: 0;
    }
    100% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
      opacity: 1;
    }
  }

  .slide-in-right {
    -webkit-animation: slide-in-right 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94)
      both;
    animation: slide-in-right 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  /* ----------------------------------------------
 * Generated by Animista on 2021-10-28 20:14:31
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

  /**
 * ----------------------------------------
 * animation slide-out-right
 * ----------------------------------------
 */
  @-webkit-keyframes slide-out-right {
    0% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
      opacity: 1;
    }
    100% {
      -webkit-transform: translateX(1000px);
      transform: translateX(1000px);
      opacity: 0;
    }
  }
  @keyframes slide-out-right {
    0% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
      opacity: 1;
    }
    100% {
      -webkit-transform: translateX(1000px);
      transform: translateX(1000px);
      opacity: 0;
    }
  }

  .slide-out-right {
    -webkit-animation: slide-out-right 0.5s
      cubic-bezier(0.55, 0.085, 0.68, 0.53) both;
    animation: slide-out-right 0.5s cubic-bezier(0.55, 0.085, 0.68, 0.53) both;
  }
`;

const Menu = styled.div`
  width: 100%;
  background: white;
  /* height: 100px; */
  position: absolute;
  box-shadow: ${({ theme }) => theme.shadows.subMenu};
  /* inset 0 7px 9px -7px rgba(0, 0, 0, 0.4), */
  top: 50px;
  left: 0;
  right: 0;
  z-index: 2;
  border-bottom-left-radius: 30px;
  border-bottom-right-radius: 30px;
  .bigButton {
    width: 100%;
    display: flex;
    padding: 10px 0;
    justify-content: center;
  }
  padding-bottom: 10px;
`;

const ChevronRightRegularStyled = styled(ChevronRightRegular)`
  font-size: 0.8em !important;
`;

const MenuElement = styled.button`
  cursor: pointer;
  outline: none;
  background: transparent;
  font-size: 0.825em;
  font-weight: 600;
  border: 0px solid transparent;
  width: 100%;
  border-top: 1px solid ${({ theme }) => theme.colors.borderColors.lightGrey};
  padding: 15px 25px;
  padding-right: 17px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  .label {
    opacity: 0.7;
  }
  .icon {
  }
`;

const SubStyled = styled.div`
  position: absolute;
  width: 100vw;
  height: 70vh;
  .content {
    display: block;
    height: 100%;
    overflow: auto;
  }
`;

const BackButton = styled.button``;

const Sub = ({ children }) => {
  const [classes, setClasses] = useState("slide-in-right");

  const handleBack = () => {
    setClasses("slide-out-right ");
  };

  return (
    <SubStyled className={classes}>
      <div className="content">
        <BackButton onClick={handleBack}>GO BACK</BackButton>
        {cloneElement(children, { mobile: true })}
      </div>
    </SubStyled>
  );
};

const MainMenuMobile: FunctionComponent<Props> = ({}) => {
  const { elements, featuresOpened, closeSubMenu } = useMainMenuElements();
  const {
    t,
    i18n: { language },
  } = useTranslation("common");

  const [opened, setOpened] = useState(false);
  const [menuClasses, setMenuClasses] = useState("hide");

  const handleOpenMenu = () => {
    console.log("handleOpen");
    // opened ? "swing-in-top-fwd" : 'swing-out-top-bck'
    opened
      ? setMenuClasses("swing-out-top-bck")
      : setMenuClasses("swing-in-top-fwd");

    closeSubMenu();

    setOpened((state) => !state);
    // "this.classList.toggle('opened');this.setAttribute('aria-expanded', this.classList.contains('opened'))"
  };

  return (
    <Wrapper>
      <div style={{ zIndex: 3 }}>
        <HamburgerAnimated opened={opened} onClick={handleOpenMenu} />
      </div>
      <Menu className={`${menuClasses}`}>
        {Boolean(featuresOpened) && (
          <Sub goBack={closeSubMenu}>
            {elements[featuresOpened - 1].SubMenu}
          </Sub>
        )}
        {elements.map((element) => {
          const { label, action, key, SubMenu, centerSubMenu } = element;
          return (
            <MenuElement key={key} onClick={action}>
              <div className="label">{label}</div>
              <div className="icon">
                {SubMenu ? <ChevronRightRegularStyled /> : <div></div>}
              </div>
            </MenuElement>
          );
        })}
        <div className="bigButton">
          <MainNavigationBigButton label={t("common:startFree")} mobile />
        </div>
      </Menu>
    </Wrapper>
  );
};

export default MainMenuMobile;
